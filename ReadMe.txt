Был реализован шаблон класса MultiSet<T> для хранения мультимножеств типа Т.
Были определены: конструктор умолчания и копирования, операция присваивания.
Любые операции над типом Т могут генерировать исключения. MultiSet хранит последовательность элементов, 
добавлять элементы можно только в конец последовательности, удалять можно элемент из любого места.

Последовательность хранится как динамический массив.

Конструктор умолчания, делает массив пустым
Конструктор копирования, кроме константной ссылки на другой MultiSet, имеет еще целочисленный параметр с новой вместимостью.
Функция работает как обычный конструктор копирования, но если второй параметр неотрицательный и не меньше размера массива, 
то он используется как вместимость итогового MultiSet.

Реализованы следующие методы:

void clear() обнуляет размер массива
int size() константный метод, возвращает размер массива.
перегруженная операция квадратные скобки генерирует стандартные исключения, если индекс выходит за границы массива. Иначе возвращается 
ссылка на элемент по индексу index. Операция перегружена как для константного метода так и нет.

void add(const T &t) если место в массиве закончилось, удваивает вместимость и перемещает элементы в новое, большее, место. 
После расширения вставляет t  в конец массива. 

T del (int index) получает элемент массива по индексу index. Копирует на место index последний элемент массива.

Класс component - продолжение предыдущей задачи. 
Был реализован абстроктный класс component, обладающий мультимножеством подкомпонентов (хранится как MultiSet<component *>). Не управляет памятью под
подкомпоненты.

В классе реализованы следующие специальные методы:

1. Конструктор умолчания; инициализация мультимножества конструктором умолчания;
2. Деструктор; разрушает мультимножество.

Реализованы следующие методы:

1. int count(); возоращает количество подкомпонентов;
2. subcomponent(int); возвращает ссылку на подкомпонент с заданными номером; генерирует исключение, если номер некорректный; 
метод перегружен как неконстантный так и как константный; неконстантный возвращает неконстантную ссылку на подкомпонент,
константный возвращает константную ссылку;
3. void add(Component &); добавляет указанный компонент в мультимножество подкомпонентов;

У каждого объекта типа-наследника класса Component определен константный метод const std::string &name();. Он возвращает некую строку.
Метод name() не  доступен извне класса Component и его классов-наследников. В самом классе Component  этот метод чисто виртуальный.

Перегружена операция вывода в std::ostream для класса Component. Объект печатается в функциональном инфиксном виде: сначала имя самого
объекта (результат метода name ()), затем в круглых скобках то же для каждого подкомпонента в порядке их хранения в мультимножестве, разделяя запятой с пробелом. 

Определён класс Вох, являющийся потомком класса Component. В классе Вох: конструктор с одним параметром типа std::string (сохраняет его в
поле класса), конструктор копирования (создает копию с той же строкой и пустым набором подкомпонентов) и операция присваивания (аналогично 
копированию, если разные объекты). Метод name должен возвращать строку Вох. 

Код безопасен в смысле исключений. Все методы определены вне объявлений классов и шаблонов классов. 

